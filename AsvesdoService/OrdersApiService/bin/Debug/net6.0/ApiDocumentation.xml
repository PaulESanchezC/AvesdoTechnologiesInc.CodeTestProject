<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiOrderService</name>
    </assembly>
    <members>
        <member name="M:ApiOrderService.Controllers.OrderController.GetAllOrdersForStore(System.String,System.Threading.CancellationToken)">
            <param name="storeId">Store Identifier</param>
            <param name="cancellationToken"></param>
            <response code="400"><mark>Bad Request</mark> : storeId is a required field .</response>
        </member>
        <member name="M:ApiOrderService.Controllers.OrderController.FindAllOrdersForStoreByDate(System.String,System.String,System.Threading.CancellationToken)">
            <param name="storeId">Store Identifier</param>
            <param name="dateRequest">Date requested, as text in format: <mark> MM-dd-yyyy </mark></param>
            <param name="cancellationToken"></param>
            <response code="400"><mark>Bad Request</mark> : storeId and dateRequest are required field .</response>
            <response code="400"><mark>Bad Request</mark> :  dateRequest invalid date format.</response>
        </member>
        <member name="M:ApiOrderService.Controllers.OrderController.GetSingleOrdersForStore(System.String,System.String,System.Threading.CancellationToken)">
            <param name="storeId">Store Identifier</param>
            <param name="orderId">Order Identifier</param>
            <param name="cancellationToken"></param>
            <response code="400"><mark>Bad Request</mark> : storeId and orderId are required field .</response>
        </member>
        <member name="M:ApiOrderService.Controllers.OrderController.MakeAnOrder(Models.OrderModels.OrderCreateDto,System.Threading.CancellationToken)">
            <param name="orderToCreate"><mark>*required</mark> : Takes a type of OrderCreateDto serialized in the body </param>
            <param name="cancellationToken"></param>
            <response code="400"><mark>Bad Request</mark> : orderToCreate modelState invalid.</response>
        </member>
    </members>
</doc>
